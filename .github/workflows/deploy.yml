name: Deploy with Maven

on:
  push:
    branches: [production, workflow-test]

jobs:
  create-jar:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: Set up JDK 17.0.7
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.7'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
         name: proxy-plugin
         path: proxy-plugin/target/**.jar
         if-no-files-found: error
  release:
    runs-on: ubuntu-latest
    needs: [ create-jar ]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: proxy-plugin
          path: target
      - name: Set Release version env variable
        run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: production
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
          files: "target/proxy-*"
  deploy-package:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: [ release ]
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: Set up JDK 17.0.7
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.7'
          distribution: 'temurin'
      - name: Deploy Package
        env:
          MAVEN_USERNAME: ${{ secrets.REPO_USER }}
          MAVEN_PASSWORD: ${{ secrets.REPO_PASS }}
        run: mvn --batch-mode clean deploy -s ci_settings.xml